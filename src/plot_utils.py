import matplotlib.pyplot as plt
import numpy as np
import os

plt.rcParams.update({
    # "font.family": "serif",   # specify font family here
    # "font.serif": ["CMU Serif"],  # specify font here
    "font.size":32,
    'axes.labelsize': 'medium',
    'axes.titlesize':'medium',
})          # specify font size here

# Define some colors for plotting Set color cycle: traditional Chinese color https://boxingp.github.io/traditional-chinese-colors/
####################### Plotting style ####################### 
black   = "#000000"
blue    = "#065279"
red     = "#9d2933"
orange  = "#ca6924"
cyan    = "#426666"
purple  = "#686789"
yellow  = "#c89b40"
green   = "#75878a"
grey    = "#36282b"

color_cycle = [blue, red, orange, cyan, purple, yellow, green, grey]

blue2   = "#4c8dae"
red2    = "#f47983"
green2  = "#96ce54"
yellow2 = "#f0c239"
purple2 = "#b0a4e3"
orange2 = "#ff7500"
cyan2   = "#bbcdc5"
grey2   = "#36292f"
plt.style.use('~/Codes/matplotlibstyle/mystyle.mplstyle')
##############################################################
# Muted Morandi-inspired color palette
# https://gist.github.com/ChuanyuXue/3a377f7c1629b0ce68bc6b393340d0fb
# The name of colors are generated by chatgpt
colors_m = {
    'gray1': '#686789',
    'pink1': '#B77F70',
    'khaki1': '#E5E2B9',
    'taupe1': '#BEB1A8',
    'brown1': '#A79A89',
    'gray2': '#8A95A9',
    'pink2': '#ECCED0',
    'beige1': '#7D7465',
    'peach1': '#E8D3C0',
    'green1': '#7A8A71',
    'teal1': '#789798',
    'pink3': '#B57C82',
    'blue1': '#9FABB9',
    'gray3': '#B0B1B6',
    'mocha1': '#99857E',
    'gray4': '#88878D',
    'gray5': '#91A0A5',
    'olive1': '#9AA690'
}
############################################################## 

def hex_to_rgb(hex_color):
    """Convert hex color to RGB tuple."""
    hex_color = hex_color.lstrip('#')
    return np.array([int(hex_color[i:i+2], 16) for i in (0, 2, 4)]) / 255.0

def rgb_to_hex(rgb_color):
    """Convert RGB tuple to hex color."""
    return '#{:02x}{:02x}{:02x}'.format(*rgb_color)

def interpolate_colors_hex(hex_color1, hex_color2, num_colors=10):
    """Interpolate between two hex colors."""
    color1 = np.array(hex_to_rgb(hex_color1))
    color2 = np.array(hex_to_rgb(hex_color2))
    
    weights = np.linspace(0, 1, num_colors)
    
    interpolated_colors_rgb = [(1 - w) * color1 + w * color2 for w in weights]
    interpolated_colors_rgb = np.array(interpolated_colors_rgb).astype(int)
    
    # Convert each interpolated RGB color back to hex
    interpolated_colors_hex = [rgb_to_hex(color) for color in interpolated_colors_rgb]
    
    return interpolated_colors_hex

